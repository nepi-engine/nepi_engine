#!/usr/bin/env python
#
# Copyright (c) 2024 Numurus, LLC <https://www.numurus.com>.
#
# This file is part of nepi-engine
# (see https://github.com/nepi-engine).
#
# License: 3-clause BSD, see https://opensource.org/licenses/BSD-3-Clause
#


# This script is called as part of NEPI roslaunch at start-up to ensure that config files that are
# loaded by the launch file are not broken links. If the links point to a missing user config, they
# will revert back to factory config. If there is no such factory config, an empty file will be created
# to ensure that the link is not broken.

import os
import errno
import yaml

CFG_PATH = "/opt/nepi/ros/etc"
CFG_SUFFIX = ".yaml"
FACTORY_SUFFIX = ".num_factory"

# Moving symlinks is typically faster and more robust than copying files, so to reduce the
# chance of filesystem corruption in the event of e.g., power failure, we use a symlink-based config
# file scheme.
def symlink_force(target, link_name):
    try:
        os.symlink(target, link_name)
    except OSError as e:
        if e.errno == errno.EEXIST:
            os.remove(link_name)
            os.symlink(target, link_name)
        else:
            print("Unable to create symlink %s for %s", link_name, target)
            return False
    return True

def ensure_valid_yaml(filename, create_emtpy_on_fail=False):
    try:
        with open(filename, 'r') as file:
            yaml.safe_load(file)
        return True
    except:
        print (filename + " is invalid YAML")
        if create_emtpy_on_fail:
            with open(filename, "w") as f:
                f.write('# Autogenerated empty file... bad YAML in original')
    
    return False
        
def make_link_to_factory_config(target):
    factory_cfg_full_name = target + FACTORY_SUFFIX
    if not os.path.isfile(factory_cfg_full_name):
        print(factory_cfg_full_name + " does not exist. Creating empty file")
        with open(factory_cfg_full_name, 'w') as f:
            f.write("#Auto-generated to satisfy config file link requirement")
    else:
        ensure_valid_yaml(factory_cfg_full_name, create_emtpy_on_fail=True)
    
    symlink_force(factory_cfg_full_name, target)

if __name__ == '__main__':
    # Check for broken user config links and revert to factory config as necessary. Create an empty factory config as necessary
    for root, dirs, files in os.walk(CFG_PATH):
        for name in files:
            full_name = os.path.join(root, name)
            if full_name.endswith(CFG_SUFFIX) and os.path.islink(full_name):
                link_destination = os.readlink(full_name)
                #print("Debug: Found a link " + full_name + "with destination" + str(link_destination))
                if (not link_destination) or (not os.path.isfile(link_destination)): # Link target doesn't exist
                    print("Link target for " + full_name + " does not exist... reverting to factory config")
                    make_link_to_factory_config(full_name)
                
                elif not ensure_valid_yaml(link_destination): # Link target exists, so make sure it is valid yaml
                    print("Link target for " + full_name + " is not valid yaml... reverting to factory config")
                    make_link_to_factory_config(full_name)